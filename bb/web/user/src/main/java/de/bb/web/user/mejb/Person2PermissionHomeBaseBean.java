/*
 * This file is generated by MEJB.
 * DO NOT MODIFY THIS FILE!
*/


package de.bb.web.user.mejb;

abstract class Person2PermissionHomeBaseBean
  extends de.bb.mejb.CMPHomeBean
  implements de.bb.web.user.mejb.Person2PermissionHomeBase
{
  private static de.bb.mejb.CMPDbi dbi = null;
  protected de.bb.mejb.CMPDbi getDbi() { return dbi; }
  private synchronized void init() throws java.rmi.RemoteException
  {
    dbi = initDbi("de.bb.web.user.mejb", "Person2Permission");
  }

  Person2PermissionHomeBaseBean() throws java.rmi.RemoteException
  {
    super("Person2Permission");
    if (dbi == null)
      init();
  }
  public javax.ejb.EJBMetaData getEJBMetaData() throws java.rmi.RemoteException
  {
    return null;
  }
  public javax.ejb.HomeHandle getHomeHandle() throws java.rmi.RemoteException
  {
    return null;
  }
  public void remove(Object o) throws java.rmi.RemoteException
  {
    remove((de.bb.mejb.CMPBean)o, dbi);
  }
  public void remove(javax.ejb.Handle handle) throws java.rmi.RemoteException
  {
  }
  public de.bb.web.user.mejb.Person2Permission findByPrimaryKey(Object pk) throws java.rmi.RemoteException
  {
    return (de.bb.web.user.mejb.Person2Permission)readByPrimaryKey(pk, dbi);
  }
  public de.bb.web.user.mejb.Person2Permission create() throws java.rmi.RemoteException
  {
    return new Person2PermissionBean(this);
  }
  // not ejb standard functions
  public de.bb.mejb.Simple internCreate() throws java.rmi.RemoteException
  {
    return (de.bb.mejb.Simple)create();
  }
  void store(Object o) throws java.rmi.RemoteException
  {
    store((de.bb.mejb.CMPBean)o, 3, dbi);
  }
  Person2PermissionBean load(Object obj) throws java.rmi.RemoteException
  {
    Person2PermissionBean o = (Person2PermissionBean) obj;
    load(o, dbi);
    return o;
  }
  public java.util.Collection findAll() throws java.rmi.RemoteException
  {
    return this.queryCollection("SELECT * FROM Person2Permission ORDER BY ID", NOPARAM);
  }
  public java.util.Collection findByPerson(Object id) throws java.rmi.RemoteException
  {
    return this.queryCollection( "SELECT * FROM Person2Permission WHERE id_person=? ORDER BY ID", new Object[]{id});
  }
  public java.util.Collection findByPermission(Object id) throws java.rmi.RemoteException
  {
    return this.queryCollection( "SELECT * FROM Person2Permission WHERE id_permission=? ORDER BY ID", new Object[]{id});
  }
}
