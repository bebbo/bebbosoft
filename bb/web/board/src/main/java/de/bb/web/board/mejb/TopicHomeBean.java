/*
 * This file is initially generated by MEJB.
 * PLACE YOUR MODIFICATIONS HERE!
*/

package de.bb.web.board.mejb;

import java.rmi.RemoteException;
import java.util.Collection;

import com.sun.jmx.snmp.Timestamp;

import de.bb.web.board.mejb.TopicHome;
import de.bb.web.board.mejb.TopicHomeBaseBean;

public class TopicHomeBean extends TopicHomeBaseBean implements de.bb.web.board.mejb.TopicHome {
    public TopicHomeBean() throws java.rmi.RemoteException {
        super();
    }

    @Override
    public Collection<Topic> findRecent(long lastVisit, String id) throws RemoteException {
        return this.queryCollection("SELECT * FROM Topic WHERE modified > ? AND boardId = ?", new Object[] {
                new Long(lastVisit), id });
    }

    public long getCountForBoard(String s) throws RemoteException {
            double d1;
            d1 = queryDouble("SELECT COUNT(*) FROM Topic WHERE id_board=?", new Object[] { s });
            return (long) d1;
    }

    public Collection getSortedTopicList(String s) throws RemoteException {
        return queryCollection(
                "SELECT Topic.* FROM Topic WHERE Topic.id_board=? ORDER BY Topic.sticky DESC, Topic.modified DESC",
                new Object[] { s });
    }

    public Topic findLastByBoard(String s) throws RemoteException {
        Collection collection = queryCollection(
                "SELECT Topic.* FROM Topic WHERE Topic.id_board=? ORDER BY Topic.modified DESC", new Object[] { s });
        if (collection.size() == 0)
            return null;
        else
            return (Topic) collection.iterator().next();
    }

    public Collection findRecent(long l) throws RemoteException {
        Collection collection = queryCollection(
                "SELECT Topic.* FROM Topic WHERE modified>? ORDER BY Topic.modified DESC",
                new Object[] { new Timestamp(l) });
        return collection;
    }

}
