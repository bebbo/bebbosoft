/******************************************************************************
 * This file is part of de.bb.tools.bnm.core.
 *
 *   de.bb.tools.bnm.core is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   de.bb.tools.bnm.core is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with de.bb.tools.bnm.core.  If not, see <http://www.gnu.org/licenses/>.
 *   
 *   (c) by Stefan "Bebbo" Franke 2009
 */

// generated by Xsd2Class
package de.bb.tools.bnm.model;

import java.io.File;

import de.bb.tools.bnm.model.ActivationFile;
import de.bb.tools.bnm.model.ActivationOS;
import de.bb.tools.bnm.model.ActivationProperty;

public class Activation {
  /** 
   * Flag specifying whether this profile is active by default.
   */
  public boolean activeByDefault;
  /** 
   * Specifies that this profile will be activated when a matching JDK is detected. For example, <code>1.4</code>
   * only activates on JDKs versioned 1.4, while <code>!1.4</code> matches any JDK that is not version 1.4.
   */
  public String jdk;
  /** 
   * Specifies that this profile will be activated when matching operating system attributes are detected.
   */
  public ActivationOS os;
  /** 
   * Specifies that this profile will be activated when this system property is specified.
   */
  public ActivationProperty property;
  /** 
   * Specifies that this profile will be activated based on existence of a file.
   */
  public ActivationFile file;

  /**
   * Check the activation of a profile.
   * @param p
   * @return
   */
  public boolean isActive() {
    if (this.activeByDefault)
      return true;
    ActivationOS os = this.os;
    if (os != null) {
      int n1 = 0;
      int n2 = 0;
      if (os.arch != null) {
        ++n1;
        if (os.arch.equals(System.getProperty("os.arch")))
          ++n2;
      }
      if (os.name != null) {
        ++n1;
        if (os.name.equals(System.getProperty("os.name")))
          ++n2;
      }
      if (os.version != null) {
        ++n1;
        if (os.version.equals(System.getProperty("os.version")))
          ++n2;
      }
      if (os.family != null) {
        ++n1;
        if (System.getProperty("os.name").toLowerCase().indexOf(os.family) >= 0)
          ++n2;
      }
      if (n1 > 0 && n1 == n2)
        return true;
    }
    if (this.jdk != null) {
      String v = System.getProperty("java.runtime.version");
      String vv = this.jdk;
      if (vv.startsWith("!")) {
        if (!v.startsWith(vv.substring(1)))
          return true;
      }
      if (v.startsWith(vv))
        return true;
    }
    if (this.file != null) {
      if (this.file.exists != null)
        if (new File(this.file.exists).exists())
          return true;
      if (this.file.missing != null)
        if (!new File(this.file.missing).exists())
          return true;
    }
    if (this.property != null) {
      if (this.property.name != null) {
        String val = System.getProperty(this.property.name);
        if (val != null) {
          if (this.property.value == null)
            return true;
          if (val.equals(this.property.value))
            return true;
        }
      }
    }
    return false;
  }
}
