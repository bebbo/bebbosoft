/******************************************************************************
 * This file is part of de.bb.tools.bnm.core.
 *
 *   de.bb.tools.bnm.core is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   de.bb.tools.bnm.core is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with de.bb.tools.bnm.core.  If not, see <http://www.gnu.org/licenses/>.
 *   
 *   (c) by Stefan "Bebbo" Franke 2009
 */

// generated by Xsd2Class
package de.bb.tools.bnm.model;

import java.util.ArrayList;
import java.util.Map;

public class Profile {
  /** 
   * The identifier of this build profile. This used both for command line activation, and identifies
   * identical profiles to merge with during inheritance.
   */
  public String id;
  /** 
   * The conditional logic which will automatically
   * trigger the inclusion of this profile.
   */
  public Activation activation;
  /** 
   * Information required to build the project.
   */
  public Build build;
  /** 
   * The modules (sometimes called subprojects) to build as a part of this project.
   * Each module listed is a relative path to the directory containing the module.
   */
  public ArrayList<String> modules;
  /** 
   * The lists of the remote repositories for discovering dependencies and
   * extensions.
   */
  public ArrayList<Repository> repositories;
  /** 
   * The lists of the remote repositories for discovering plugins for builds and reports.
   */
  public ArrayList<Repository> pluginRepositories;
  /** 
   * This element describes all of the dependencies associated with a
   * project.
   * These dependencies are used to construct a classpath for your
   * project during the build process. They are automatically downloaded from the
   * repositories defined in this project.
   * See <a href="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html">the
   * dependency mechanism</a> for more information.
   */
  public ArrayList<Dependency> dependencies;
  /** 
   * <b>Deprecated</b>. Now ignored by Maven.
   * /
  public HashMap<String, Object> reports;
  /** 
   * This element includes the specification of report plugins to use to generate the reports on the
   * Maven-generated site.  These reports will be run when a user executes <code>mvn site</code>.  All of the
   * reports will be included in the navigation bar for browsing.
   */
  public Reporting reporting;
  /** 
   * Default dependency information for projects that inherit from
   * this one. The dependencies in this section are not immediately resolved.
   * Instead, when a POM derived from this one declares a dependency
   * described by a matching groupId and artifactId, the version and other values from this
   * section are used for that dependency if they were not already specified.
   */
  public DependencyManagement dependencyManagement;
  /** 
   * Distribution information for a project that enables deployment of the site
   * and artifacts to remote web servers and repositories respectively.
   */
  public DistributionManagement distributionManagement;
  /** 
   * Properties that can be used throughout the POM as a substitution, and are used as filters in resources
   * if enabled. The format is <code>&lt;name&gt;value&lt;/name&gt;</code>.
   */
  public Map<String, String> properties;
}
