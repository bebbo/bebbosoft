/******************************************************************************
 * This file is part of de.bb.tools.bnm.core.
 *
 *   de.bb.tools.bnm.core is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   de.bb.tools.bnm.core is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with de.bb.tools.bnm.core.  If not, see <http://www.gnu.org/licenses/>.
 *   
 *   (c) by Stefan "Bebbo" Franke 2009
 */

// generated by Xsd2Class
package de.bb.tools.bnm.model;

import java.util.ArrayList;

import de.bb.tools.bnm.model.Extension;
import de.bb.tools.bnm.model.Plugin;
import de.bb.tools.bnm.model.PluginManagement;
import de.bb.tools.bnm.model.Resource;

public class Build {
  /** 
   * This element specifies a directory containing the source
   * of the project. The generated build system will compile
   * the source in this directory when the project is built.
   * The path given is relative to the project descriptor.
   */
  public String sourceDirectory;
  /** 
   * This element specifies a directory containing the script sources
   * of the project. This directory is meant to be different from the
   * sourceDirectory, in that its contents will be copied to the output
   * directory in most cases (since scripts are interpreted rather than
   * compiled).
   */
  public String scriptSourceDirectory;
  /** 
   * This element specifies a directory containing the unit test
   * source of the project. The generated build system will
   * compile these directories when the project is being tested.
   * The path given is relative to the project descriptor.
   */
  public String testSourceDirectory;
  /** 
   * The directory where compiled application classes are placed.
   */
  public String outputDirectory;
  /** 
   * The directory where compiled test classes are placed.
   */
  public String testOutputDirectory;
  /** 
   * A set of build extensions to use from this project.
   */
  public ArrayList<Extension> extensions;
  /** 
   * The default goal (or phase in Maven 2) to execute when none is specified for the project.
   */
  public String defaultGoal;
  /** 
   * This element describes all of the classpath resources such as properties files associated with a
   * project. These resources are often included in the final package.
   */
  public ArrayList<Resource> resources;
  /** 
   * This element describes all of the classpath resources such as properties files associated with a
   * project?s unit tests.
   */
  public ArrayList<TestResource> testResources;
  /** 
   * The directory where all files generated by the build are placed.
   */
  public String directory;
  /** 
   * The filename (excluding the extension, and with no path information) that the produced artifact
   * will be called. The default value is <code>${artifactId}-${version}</code>.
   */
  public String finalName;
  /** 
   * The list of filter properties files that are used when filtering is enabled.
   */
  public ArrayList<String> filters;
  /** 
   * Default plugin information to be made available for reference by
   * projects derived from this one. This plugin configuration will not
   * be resolved or bound to the lifecycle unless referenced. Any local
   * configuration for a given plugin will override the plugin?s entire
   * definition here.
   */
  public PluginManagement pluginManagement;
  /** 
   * The list of plugins to use.
   */
  public ArrayList<Plugin> plugins;

  
  public String sourceEncoding;
}
