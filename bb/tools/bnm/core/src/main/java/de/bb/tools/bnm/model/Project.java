/******************************************************************************
 * This file is part of de.bb.tools.bnm.core.
 *
 *   de.bb.tools.bnm.core is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   de.bb.tools.bnm.core is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with de.bb.tools.bnm.core.  If not, see <http://www.gnu.org/licenses/>.
 *   
 *   (c) by Stefan "Bebbo" Franke 2009
 */

// generated by Xsd2Class
package de.bb.tools.bnm.model;

import java.util.ArrayList;
import java.util.Map;

import de.bb.tools.bnm.Bind;

public class Project extends Id {
  /**
   * The location of the parent project, if one exists. Values from the parent project will be the default for this
   * project if they are left unspecified. The location is given as a group ID, artifact ID and version.
   */
  public transient Parent parent;
  /**
   * Declares to which version of project descriptor this POM conforms.
   */
  public String modelVersion = "4.0.0";
  /**
   * The type of artifact this project produces, for example <code>jar</code> <code>war</code> <code>ear</code>
   * <code>pom</code>. Plugins can create their own packaging, and therefore their own packaging types, so this list
   * does not contain all possible types.
   */
  public transient String packaging;
  /**
   * The full name of the project.
   */
  public String name;
  /**
   * A detailed description of the project, used by Maven whenever it needs to describe the project, such as on the web
   * site. While this element can be specified as CDATA to enable the use of HTML tags within the description, it is
   * discouraged to allow plain text representation. If you need to modify the index page of the generated web site, you
   * are able to specify your own instead of adjusting this text.
   */
  public String description;
  /**
   * The URL to the project?s homepage.
   */
  public String url;
  /**
   * Describes the prerequisites in the build environment for this project.
   */
  public Prerequisites prerequisites;
  /**
   * The project?s issue management system information.
   */
  public IssueManagement issueManagement;
  /**
   * The project?s continuous integration information.
   */
  public CiManagement ciManagement;
  /**
   * The year of the project?s inception, specified with 4 digits. This value is used when generating copyright notices
   * as well as being informational.
   */
  public String inceptionYear;
  /**
   * Contains information about a project?s mailing lists.
   */
  public ArrayList<MailingList> mailingLists;
  /**
   * Describes the committers of a project.
   */
  public ArrayList<Developer> developers;
  /**
   * Describes the contributors to a project that are not yet committers.
   */
  public ArrayList<Contributor> contributors;
  /**
   * This element describes all of the licenses for this project. Each license is described by a <code>license</code>
   * element, which is then described by additional elements. Projects should only list the license(s) that applies to
   * the project and not the licenses that apply to dependencies. If multiple licenses are listed, it is assumed that
   * the user can select any of them, not that they must accept all.
   */
  public ArrayList<License> licenses;
  /**
   * Specification for the SCM used by the project, such as CVS, Subversion, etc.
   */
  public Scm scm;
  /**
   * This element describes various attributes of the organization to which the project belongs. These attributes are
   * utilized when documentation is created (for copyright notices and links).
   */
  public Organization organization;
  /**
   * Information required to build the project.
   */
  public Build build;
  /**
   * A listing of project-local build profiles which will modify the build process when activated.
   */
  public ArrayList<Profile> profiles;
  /**
   * The modules (sometimes called subprojects) to build as a part of this project. Each module listed is a relative
   * path to the directory containing the module.
   */
  public transient ArrayList<String> modules;
  /**
   * The lists of the remote repositories for discovering dependencies and extensions.
   */
  public ArrayList<Repository> repositories;
  /**
   * The lists of the remote repositories for discovering plugins for builds and reports.
   */
  public ArrayList<Repository> pluginRepositories;
  /**
   * This element describes all of the dependencies associated with a project. These dependencies are used to construct
   * a classpath for your project during the build process. They are automatically downloaded from the repositories
   * defined in this project. See <a
   * href="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html" >the dependency
   * mechanism</a> for more information.
   */
  public ArrayList<Dependency> dependencies;
  /**
   * This element includes the specification of report plugins to use to generate the reports on the Maven-generated
   * site. These reports will be run when a user executes <code>mvn site</code>. All of the reports will be included in
   * the navigation bar for browsing.
   */
  public Reporting reporting;
  /**
   * Default dependency information for projects that inherit from this one. The dependencies in this section are not
   * immediately resolved. Instead, when a POM derived from this one declares a dependency described by a matching
   * groupId and artifactId, the version and other values from this section are used for that dependency if they were
   * not already specified.
   */
  public DependencyManagement dependencyManagement;
  /**
   * Distribution information for a project that enables deployment of the site and artifacts to remote web servers and
   * repositories respectively.
   */
  public DistributionManagement distributionManagement;
  /**
   * Properties that can be used throughout the POM as a substitution, and are used as filters in resources if enabled.
   * The format is <code>&lt;name&gt;value&lt;/name&gt;</code>.
   */
  public Map<String, String> properties;
  /**
   * All dependencies.
   */
  private ArrayList<Id> __allDependencies;

  /**
   * all direct dependencies - these are: <ul> <li>parent</li> <li>dependencies</li> </ul>
   * 
   * @return an array list containing all direct dependencies.
   */
  public ArrayList<Id> getAllDependencies() {
    if (__allDependencies != null)
      return __allDependencies;
    __allDependencies = new ArrayList<Id>();
    if (parent != null)
      __allDependencies.add(parent);
    if (dependencies != null)
      __allDependencies.addAll(dependencies);
    return __allDependencies;
  }

  public String toString() {
    StringBuffer sb = new StringBuffer();
    sb.append("<project>\r\n");
    sb.append(Bind.append(2, this));
    sb.append("</project>\r\n");
    return sb.toString();
  }
  }
